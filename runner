#!/usr/bin/env python
##This will work in development on a relative folder basis
##It will then work when installed in site-packages on a target system
##where the runner script is in /usr/bin (or wherever)
##
##So, you don't need anything special - no fancy path tricks.
import os
import sys
import signal
import logging
from optparse import OptionParser

import daemon

from canape.main import Canape
from canape.xmlrpc import CanapeXMLRPCServer
from canape.pidlockfile import RPIDLockFile, is_pidfile_stale, AlreadyLocked
from canape.env import CanapeEnv
from canape.config import CanapeConfig

usage = "usage: %prog [options] arg"
parser = OptionParser(usage,  version="%prog 1.0")

parser.add_option("-d","--daemon", type="choice", choices=('start','stop') )
parser.add_option("--only-xmlrpc", action="store_true", dest="onlyxmlrpc")

(options, args) = parser.parse_args()

env = CanapeEnv()
pidfile = RPIDLockFile(env['CANAPE_DATA_DIR']+'/canape.pid')
files_preserve=None

def is_locked(pidfile):
    if is_pidfile_stale(pidfile):
        pidfile.break_lock()
    return pidfile.is_locked()


if options.daemon is not None:
    if options.daemon == 'start':

        if is_pidfile_stale(pidfile):
            pidfile.break_lock()

        if not pidfile.is_locked():
            canape = Canape()
            daemon_context = daemon.DaemonContext(files_preserve=files_preserve,
                                                    pidfile=pidfile)
            with daemon_context:
                canape.daemon_run()
        else:
            sys.exit("Canape already started")

    elif options.daemon == 'stop':

        if not is_locked(pidfile):
            sys.exit("Canape isn't started")
        else:
            pid = pidfile.read_pid()
            try:
                os.kill(pid, signal.SIGTERM)
            except OSError, exc:
                sys.exit("Failed to terminate %s: %s" % (pid, exc))

elif options.onlyxmlrpc:
    if is_locked(pidfile):
        sys.exit("Canape already started, you can't start the XML-RCP server")
    else:
        config = CanapeConfig()
        server = CanapeXMLRPCServer(config['xmlrpc']['hostname'],
                                    config['xmlrpc']['port'])
        server.daemon = False
        server.start()

else:
    if is_locked(pidfile):
        sys.exit("Canape already started")
    else:
        canape = Canape()
        canape.check()
